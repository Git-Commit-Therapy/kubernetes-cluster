apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: keycloak-authenticator-realm-sancommitto
spec:
  keycloakCRName: keycloak-authenticator
  realm:
    # id: example-realm
    realm: sancommitto
    displayName: SanCommitto
    enabled: true
    clients:
      # emergency_ward
      - clientId: {{ .Values.keycloak_authenticator.clients.emergency_ward.client_id }}
        secret: {{ .Values.keycloak_authenticator.clients.emergency_ward.client_secret }}
        name: "Emergency Ward Panels Backend"
        description: ""
        rootUrl: ""
        adminUrl: ""
        baseUrl: ""
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: "client-secret"
        redirectUris:
          - "/*"
        webOrigins:
          - "/*"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: true
        protocol: "openid-connect"
        attributes:
          realm_client: "false"
          oidc.ciba.grant.enabled: "false"
          client.secret.creation.time: "1745580400"
          backchannel.logout.session.required: "true"
          oauth2.device.authorization.grant.enabled: "false"
          backchannel.logout.revoke.offline.tokens: "false"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        defaultClientScopes:
          - "web-origins"
          - "acr"
          - "profile"
          - "roles"
          - "basic"
          - "email"
        optionalClientScopes:
          - "address"
          - "phone"
          - "offline_access"
          - "organization"
          - "microprofile-jwt"
        access:
          view: true
          configure: true
          manage: true

      # auth_golang
      - clientId: {{ .Values.keycloak_authenticator.clients.auth_golang.client_id }}
        secret: {{ .Values.keycloak_authenticator.clients.auth_golang.client_secret }}
        name:
        description:
        rootUrl:
        adminUrl:
        baseUrl:
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - /*
        webOrigins:
          - /*
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: true
        protocol: openid-connect
        attributes:
          realm_client: "false"
          oidc.ciba.grant.enabled: "false"
          client.secret.creation.time: "1736864230"
          backchannel.logout.session.required: "true"
          oauth2.device.authorization.grant.enabled: "false"
          backchannel.logout.revoke.offline.tokens: "false"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        optionalClientScopes:
          - address
          - phone
          - organization
          - offline_access
          - microprofile-jwt

    groups:
      - id: c9f3f9b0-105f-4c08-93cf-4f87e14fe2d9
        name: doctors
        path: /doctors
        subGroups: []
        attributes: {}
        realmRoles: []
        clientRoles: {}
      - id: 1f258e2f-c44a-4897-b263-ed8f9333e401
        name: patients
        path: /patients
        subGroups: []
        attributes: {}
        realmRoles: []
        clientRoles: {}
      - id: 8a29481e-757b-4927-a3cb-e9249c530937
        name: staff
        path: /staff
        subGroups: []
        attributes: {}
        realmRoles: []
        clientRoles: {}
